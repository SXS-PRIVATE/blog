<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.shu.blog.dao.ArticleDaoInter">
    <!--获取热门文章-->
    <select id="getHotArticles" resultType="cn.shu.blog.beans.Article">
       /* SELECT *,CASE WHEN  num IS NULL THEN 0 ELSE num END AS commnum
                    FROM articles LEFT JOIN (SELECT COUNT(*)AS num,articleId
                    FROM comments GROUP BY articleId) AS comments_count
                    ON   comments_count. articleId= articles.id
                    ORDER BY visitors desc,updateDate desc limit 0,5*/
       SELECT id,title,visitors,updateDate,CONCAT(LEFT(description,20),'...') as description,imagePath
       FROM articles
       ORDER BY visitors DESC,updateDate DESC LIMIT 0,5

    </select>
     <!--获取文章评论-->
    <resultMap id="comments" type="cn.shu.blog.beans.Comment">
        <id property="id" column="id"/>
        <result column="comment" property="comment"/>
        <result column="createDate" property="createDate"/>
        <association property="user" javaType="cn.shu.blog.beans.User">
            <result column="nickname" property="nickname"/>
        </association>
    </resultMap>
    <select id="getArticleComments" resultMap="comments">
            select comments.id,comments.comment,comments.createDate,nickname from comments,users
             where articleId=#{articleId} and comments.userId=users.id
            order by createDate desc limit #{currPage},#{pageCount}
     </select>
    <!--评论文章-->
    <insert id="addArticlesComment">
        insert into comments values(null,#{articleId},#{userId},#{dateTime},'无',#{comment})
    </insert>
    <!--获取文章详细信息-->
<!--
    <resultMap id="homeArticleDetail" type="cn.shu.blog.beans.HomeArticle">
        <association property="article" javaType="cn.shu.blog.beans.Article"/>
    </resultMap>
-->

    <!-- ==-1 则查询全部 类型-->
    <select id="getArticles"  resultType="cn.shu.blog.beans.Article">
      SELECT xx.id,title,createDate,updateDate,userId,visitors,fileType,targetFilePath,sourceFilePath,description,imagePath,commNum,categoryName
                 FROM (SELECT *,CASE WHEN  num IS NULL THEN 0 ELSE num END AS commNum
                 FROM articles LEFT JOIN (SELECT COUNT(*)AS num,articleId FROM comments GROUP BY articleId) AS comments_count
                 ON comments_count. articleId= articles.id
                 <where>
                 <if test="categoryId!=-1">
                    articles.categoryId=#{categoryId}
                 </if>
                 </where>
                 ORDER BY updatedate DESC LIMIT #{currPage},#{pageNum}) AS xx,category WHERE xx.categoryId=category.id;
    </select>
    <!--查询一个文章-->
    <select id="getSingleArticle" resultType="cn.shu.blog.beans.Article">
        SELECT  xx.id,title,updateDate,visitors,fileType,targetFilePath,sourceFilePath,description,imagePath,commNum,nickname, categoryName
                 FROM (SELECT
                       b.id,
                       title,
                       updateDate,
                        visitors,
                        fileType,
                        targetFilePath,
                        sourceFilePath,
                        description,
                        imagePath,
                        commNum,
                        nickname,
                        categoryId
                      FROM (SELECT *
                            FROM articles,
                              (SELECT
                                 COUNT(*)  AS commNum
                               FROM comments
                              WHERE articleId = #{articleId}) AS a
                            WHERE articles.id = #{articleId}) AS b,
                        users
                 WHERE users.id = b.userId) AS xx,category
                WHERE xx.categoryId = category.id;
    </select>
    <!--获取文章数量-->

    <select id="getArticlesCount" resultType="java.lang.Integer" >
        SELECT count(*) as _count FROM articles
        <where>
            <if test="categoryId!=-1">
                categoryId=#{categoryId}
            </if>
        </where>
    </select>

    <!--获取当前文章以外文章 计算推荐文章-->
    <select id="getExceptCurrArticles" resultType="cn.shu.blog.beans.Article">
        select id,title from articles where id!=#{currArticleId}
    </select>

    <!--添加文章访问记录-->
    <update id="addVisitRecord">
        update myblog.articles set visitors=visitors+1 where id=#{articleId}
    </update>
</mapper>
